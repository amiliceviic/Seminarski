name: web-app-node-angular

services:
  db:
    image: mysql:8.4
    platform: linux/amd64
    container_name: db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    command: >-
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_0900_ai_ci
    volumes:
      - db_data:/var/lib/mysql
    networks: [appnet]
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -uroot -p${DB_ROOT_PASSWORD} --silent || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 30s
    logging:
      driver: json-file
      options: { max-size: "10m", max-file: "3" }
    labels:
      - "app.tier=database"

  api:
    container_name: api
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file:
      - ./env/backend.env
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${API_PORT}:3000"
    volumes:
      - type: bind
        source: ./logs
        target: /var/log/app
    networks: [appnet]
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:3000/health || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 15s
    logging:
      driver: json-file
      options: { max-size: "10m", max-file: "3" }
    labels:
      - "app.tier=backend"

  web:
    container_name: web
    build:
      context: ./frontend
      dockerfile: Dockerfile
    env_file:
      - ./env/frontend.env
    depends_on:
      api:
        condition: service_healthy
    ports:
      - "${WEB_PORT}:80"
    networks: [appnet]
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost/health || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 10s
    logging:
      driver: json-file
      options: { max-size: "10m", max-file: "3" }
    labels:
      - "app.tier=frontend"

networks:
  appnet:
    driver: bridge

volumes:
  db_data: